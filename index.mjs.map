{"version":3,"file":"index.mjs","sources":["../lib/ctors.js","../lib/main.js"],"sourcesContent":["/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport Complex128 from '@stdlib/complex-float64' ;\nimport Complex64 from '@stdlib/complex-float32' ;\n\n\n// MAIN //\n\nvar ctors = {\n\t'Complex128': Complex128,\n\t'Complex64': Complex64\n};\n\n\n// EXPORTS //\n\nexport default ctors;\n","/**\n* @license Apache-2.0\n*\n* Copyright (c) 2018 The Stdlib Authors.\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n*    http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\n'use strict';\n\n// MODULES //\n\nimport { isPrimitive as isNumber } from '@stdlib/assert-is-number' ;\nimport ctors from './ctors.js' ;\n\n\n// MAIN //\n\n/**\n* Revives a JSON-serialized complex number.\n*\n* @param {string} key - key\n* @param {*} value - value\n* @returns {(*|Complex)} value or complex number\n*\n* @example\n* import parseJSON from '@stdlib/utils-parse-json' ;\n*\n* var str = '{\"type\":\"Complex128\",\"re\":5,\"im\":3}';\n*\n* var z = parseJSON( str, reviveComplex );\n* // returns <Complex128>\n*/\nfunction reviveComplex( key, value ) {\n\tvar ctor;\n\tif (\n\t\tvalue &&\n\t\tvalue.type &&\n\t\tisNumber( value.re ) &&\n\t\tisNumber( value.im )\n\t) {\n\t\tctor = ctors[ value.type ];\n\t\tif ( ctor ) {\n\t\t\treturn new ctor( value.re, value.im );\n\t\t}\n\t}\n\treturn value;\n}\n\n\n// EXPORTS //\n\nexport default reviveComplex;\n"],"names":["ctors","Complex128","Complex64","reviveComplex","key","value","ctor","type","isNumber","re","im"],"mappings":";;yQA4BA,IAAIA,EAAQ,CACXC,WAAcA,EACdC,UAAaA,GCad,SAASC,EAAeC,EAAKC,GAC5B,IAAIC,EACJ,OACCD,GACAA,EAAME,MACNC,EAAUH,EAAMI,KAChBD,EAAUH,EAAMK,MAEhBJ,EAAON,EAAOK,EAAME,OAEZ,IAAID,EAAMD,EAAMI,GAAIJ,EAAMK,IAG5BL"}